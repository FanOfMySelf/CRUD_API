package controllers

import (
	"net/http"

	"CRUD_Api/models"

	"github.com/gin-gonic/gin"
)

type CreateUserInput struct {
	User_id  string `json:"user_id" binding:"required"`
	Username string `json:"username" binding:"required"`
	Email    string `json:"email" binding:"required"`
}

type UpdateUserInput struct {
	Username string `json:"username"`
	Email    string `json:"email"`
}

func CreateUser(c *gin.Context) {
	var input CreateUserInput
	if err := c.ShouldBindJSON(&input); err != nil {
		c.AbortWithStatusJSON(http.StatusBadRequest, gin.H{"error": err.Error()})
		return
	}

	post := models.User{User_id: input.User_id, Username: input.Username, Email: input.Email}

	models.DB.Create(&post)

	c.JSON(http.StatusOK, gin.H{"data": post})
}

func FindAllUser(c *gin.Context)  {
	var posts []models.User
	models.DB.Find(&posts)

	c.JSON(http.StatusOK, gin.H{"data": posts})
}

func FindUser(c *gin.Context) {
	var post models.User

	if err := models.DB.Where("user_id = ?", c.Param("user_id")).First(&post).Error; err != nil {
		c.AbortWithStatusJSON(http.StatusNotFound, gin.H{"error": err.Error()})
		return
	}

	c.JSON(http.StatusOK, gin.H{"data": post})
}

func UpdateUser(c *gin.Context) {
	var post models.User
	if err := models.DB.Where("user_id = ?", c.Param("user_id")).First(&post).Error; err != nil {
		c.AbortWithStatusJSON(http.StatusNotFound, gin.H{"error": "record not found"})
		return
	}

	var input UpdateUserInput

	if err := c.ShouldBindJSON(&input); err != nil {
		c.AbortWithStatusJSON(http.StatusBadRequest, gin.H{"error": err.Error()})
		return
	}

	updatedUser := models.User{Username: input.Username, Email: input.Email}

	models.DB.Model(&post).Updates(&updatedUser)
	c.JSON(http.StatusOK, gin.H{"data": post})
}

func DeleteUser(c *gin.Context) {

    var post models.User
    if err := models.DB.Where("user_id = ?", c.Param("user_id")).First(&post).Error; err != nil {
        c.AbortWithStatusJSON(http.StatusNotFound, gin.H{"error": "record not found"})
        return
    }

    models.DB.Delete(&post)
    c.JSON(http.StatusOK, gin.H{"data": "success"})
}
